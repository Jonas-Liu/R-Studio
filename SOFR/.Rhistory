test <- read.table(rawdata, sep = ',',
col.names = c("class", "grade"))
View(test)
attr(test)
attributes(test)
type(test)
str(test)
attributes(test)
attributes(test[1:2,])
View(test)
attributes(test)
table(test)
tables(test)
r1 = .474
r2 = .184
up = r1*(r1^2-r2)-r1*r2*(1-r2)
bt = r2*(r1^2-r2)-r1^2(1-r2)+1-r1^2
up/bt
bt = r2*(r1^2-r2)-r1^2*(1-r2)+1-r1^2
up/bt
up
p1 = -0.3
p2 = 0.4
r1 = p1/(1-p2)
r2 = p1*r1+p2
r1;r2
p1*r2 + p2*r1
p1 = 0.3
p2 = -0.4
r1 = p1/(1-p2)
r2 = p1*r1+p2
r1;r2
p1*r2 + p2*r1
p1 = 1.2
p2 = -0.8
r1 = p1/(1-p2)
r2 = p1*r1+p2
r1;r2
p1*r2 + p2*r1
p1 = -0.5
p2 = -0.24
r1 = -p1*(1-p2)/(1+p1^2+p2^2)
r2 = -p2/(1+p1^2+p2^2)
r1;r2
-p1/(1+p1^2)
p1 = -0.9
-p1/(1+p1^2)
-p1^2/(1+p1^2+p1^4)
-p1^3/(1+p1^2+p1^4+p1^6)
r1 = -.189
r2 = -.113
r3 = -.068
r3-3*r1*r2+2*r1^3
r3-r1*r2+r1^2*r3-r1*r2+r1^3-r1*r2^2
1-r1*r2+r1^2-r2^2
1-r2^2
r2*(r1^2-r2)-r1^2*(1-r2)+1-r1^2
r1^3-2*r1*r2+r1*r2^2+r3-r3*r1^2
r2*(r1^2-r2)-r1^2*(1-r2)+1-r1^2
r1^3-2*r1*r2+r1*r2^2+r3-r3*r1^2
up = r2*(r1^2-r2)-r1^2*(1-r2)+1-r1^2
up
dn = r1^3-2*r1*r2+r1*r2^2+r3-r3*r1^2
dn
up/dn
dn = r2*(r1^2-r2)-r1^2*(1-r2)+1-r1^2
dn
up = r1^3-2*r1*r2+r1*r2^2+r3-r3*r1^2
up
up/dn
t1 = .3
t2 = .5
up = -t1+t1^2;up
dn = 1+t1^2+t2^2;dn
up/dn
0.15/1.34
up = -t1+t1*t2;up
dn = 1+t1^2+t2^2;dn
up/dn
up = -t2
up/dn
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(readxl)
price_tb <- read_csv("divprice.csv")
price_tb
price_tb <- read.csv("divprice.csv")
price_tb
price_tb$date <- as.Date(price_tb$date,"%Y/%m/%d")
price_tb$date <- as.Date(price_tb$date,"%Y%m%d")
price_tb$date
?as.Date
price_tb$date <- as.Date(price_tb$date,"%Y%m%d")
as.Date(price_tb$date,"%Y%m%d")
as.Date(11111111,"%Y%m%d")
as.Date("11111111","%Y%m%d")
# Read in data
price_tb <- read_csv("divprice.csv")
price_tb$date <- as.Date(price_tb$date,"%Y%m%d")
price_tb$date <- as.Date(as.character(price_tb$date),"%Y%m%d")
r0 = 1.875/(1-0.61)
r0
r0 = 1.875/(1-0.61)
r1 = (-r0-0.5)/1.6
r2 = -r1-0.6*r0
r1;r2
r1/r0
r2/r0
rho1=r1/r0
rho2=r2/r0
rho3 = -rho2-0.6*rho1
rho3
1.2^2*0.2^2/0.12
.14^2
.24^2
.7*.2^2
a1 = 0.03
b1 = 0.7
a2 = -0.02
b2 = 1.2
sm = 0.2
r1 = 0.2
r2 = 0.12
sd1 = b1^2*sm^2/r1
sd1
0.02^2*.9+.1*.03^2
sqrt(0.00045)
0.36*0.15^2+9*0.04^2
sqrt(0.36*0.15^2+9*0.04^2)
4.5+0.6*6
2.56/11.45*sqrt(88)
1.6/19.41*sqrt(88)
19.41^2*6.08/0.97^2
11.45^2*22.63/1.1^2
sqrt(11.45^2*22.63/1.1^2)
sqrt(19.41^2*6.08/0.97^2)
sqrt(11.45^2*22.63/1.1^2)
.94*.01^2+(1-.94)*0.0444^2
sqrt(.94*.01^2+(1-.94)*0.0444^2)
100*sqrt(.94*.01^2+(1-.94)*0.0444^2)
100*sqrt(.8*.01^2+(1-.8)*0.0444^2)
300*124.3-100*124.2-200*123.3
300*124.3-100*124.2-200*124.3
300*124.3-100*124.2-200*123.3
(400*124.3+200*124.9+200*125)/800
200*.2+8*20*.2
160*1.25
28*1.03+20
28*0.03+20+100
68*0.03+20+100
4.5+0.6*6
0.3*1.1/0.1
22.63*11.45^2/1.1
sqrt(22.63*11.45^2/1.1)
sqrt(6.08*19.41^2/0.97)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(readxl)
# Read in data
pf_tb <- read_excel("performance.xlsx", skip = 9)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(readxl)
# Read in data
pf_tb <- read_excel("performance.xlsx", skip = 9)
pf_tb
# Read in data
pt_tb <- read_excel("pair_trading.xlsx")
pt_tb
curve(50*(3*x-2*exp(-x/2)*(exp(x/2)-1)-6*exp(-x/3)*(exp(x/3)-1)))
line(y=100)
abline(y=100)
?ablines
?abline
?curve()
uniroot(sin(x))
uniroot(sin(x),1:10)
uniroot(sin(x),interval = c(1,10))
uniroot(x,interval = c(1,10))
?uniroot
d <- function(lam,x){
50*(x-(exp(-lam*x)/lam)*(exp(lam*x)-1))
}
curve(d(lam=1/2,x)+2*d(lam=1/3,x),xlab="Study Length in Years",ylab="Total Expected Number of Deaths", ylim=c(400,500),xlim=c(4,7))
abline(h=462)
d <- function(lam,x){
50*(x-(exp(-lam*x)/lam)*(exp(lam*x)-1))
}
fn <- function(x){
d(lam=1/2,x)+2*d(lam=1/3,x)
}
curve(fn(x),xlab="Study Length in Years",ylab="Total Expected Number of Deaths", ylim=c(400,500),xlim=c(4,7))
abline(h=462)
uniroot(fn,interval = c(4,7))
uniroot(fn(x),interval = c(4,7))
?uniroot
uniroot(fn(x)=462,interval = c(4,7))
uniroot(function(){fn(x)=462},interval = c(4,7))
uniroot(function(){fn(x)-462},interval = c(4,7))
uniroot(function(x){fn(x)-462},interval = c(4,7))
curve(fn(x),xlab="Study Length in Years",ylab="Total Expected Number of Deaths", ylim=c(400,500),xlim=c(4,7))
abline(h=462)
URL.date <- Sys.Date()
URL.date <- format(URL.date, '%m%d%Y')
URL.date
a <- matrix(c(2,3),2,1)
c <- matrix(c(-1,5),2,1)
a <- matrix(c(2,3),2,1)
b <- matrix(c(1,-2),1,2)
c <- matrix(c(-1,5),2,1)
a
b
c
a*b
a*b*c
b*c
b
c
b*c
a <- matrix(c(2,3),1,2)
b <- matrix(c(1,-2),2,1)
c <- matrix(c(-1,5),1,2)
a
b
c
a*b*c
a*t(b)*c
a <- matrix(c(2,3),2,1)
b <- matrix(c(1,-2),1,2)
c <- matrix(c(-1,5),2,1)
a
b
c
a <- matrix(c(2,3),2,1)
b <- matrix(c(1,-2),2,1)
c <- matrix(c(-1,5),2,1)
a
b
c
a*b*c
a*t(b)*c
shiny::runApp('D:/Repository/R-Studio/SOFR')
runApp()
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp()
runApp('D:/Repository/R-Studio/SOFR')
?renderPlotly
runApp('D:/Repository/R-Studio/SOFR')
runApp()
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
shiny::runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
shiny::runApp('D:/Repository/R-Studio/SOFR')
shiny::runApp('D:/Repository/R-Studio/SOFR')
shiny::runApp('D:/Repository/R-Studio/SOFR')
shiny::runApp('D:/Repository/R-Studio/SOFR')
shiny::runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
shiny::runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
library(rsconnect)
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
shiny::runApp('D:/Repository/R-Studio/SOFR')
runApp()
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
runApp()
runApp('D:/Repository/R-Studio/SOFR')
tmp + 1000/(1+0.09)^7
-0.5/(7.194/1.1)
0.7-0.18
1.8*0.05/100
1.8*0.05
(100/69.20205)^(1/10)-1
10/(1+0.0375)
(10/(100*(1+0.0375)^10))/(1+.0375)
(10/((1+0.0375)^10))/(1+.0375)
0.5*6.67/100
110*(1+0.0375)^(-12)
70.71889/2*(0.005^2)
70.71889/2*(0.005^2)*100
70.71889/2*(0.005^2)*100+30335
70.71889/2*(0.005^2)*100+3.0335
70.71889/2*(0.005^2)*100+3.3335
my.fn <- function(x){(((5/(1.96+2.33))^2-(800/(x-1)))/500)^(-1)+x+1}
optim(0, my.fn)
optim(0, my.fn, lower = 0)
optim(0, my.fn, lower = 0, method = "L-BFGS-B")
my.fn()0
my.fn(0)
optim(10, my.fn, lower = 0, method = "L-BFGS-B")
my.fn(1)
my.fn(2)
optim(0, my.fn, lower = 1, method = "L-BFGS-B")
optim(0, my.fn, lower = 100, method = "L-BFGS-B")
optim(0, my.fn, lower = 10000, method = "L-BFGS-B")
optim(0, my.fn, lower = 500, method = "L-BFGS-B")
my.fn <- function(x){((((5/(1.96+2.33))^2)-(800/(x-1)))/500)^(-1)+x+1}
my.fn(1)
800/0
optim(0, my.fn, lower = 700, method = "L-BFGS-B")
my.fn <- function(x){
y <- ((((5/(1.96+2.33))^2)-(800/(x-1)))/500)^(-1)+x+1
if(y<0) y <- 1e8
}
optim(0, my.fn, lower = 10, method = "L-BFGS-B")
my.fn <- function(x){
y <- ((((5/(1.96+2.33))^2)-(800/(x-1)))/500)^(-1)+x+1
if(y<0) y <- 1e8
y
}
optim(0, my.fn, lower = 10, method = "L-BFGS-B")
optim(0, my.fn, lower = 100, method = "L-BFGS-B")
optim(0, my.fn, lower = 400, method = "L-BFGS-B")
optim(0, my.fn, lower = 500, method = "L-BFGS-B")
?optim
optim(0, my.fn, lower = 1100, method = "L-BFGS-B")
if(y<0) y <- 1e-8
my.fn <- function(x){
y <- ((((5/(1.96+2.33))^2)-(800/(x-1)))/500)^(-1)+x+1
if(y<0) y <- 1e-8
y
}
optim(0, my.fn, lower = 1100, method = "L-BFGS-B")
optim(0, my.fn, lower = 100, method = "L-BFGS-B")
optim(0, my.fn, lower = 500, method = "L-BFGS-B")
optim(0, my.fn, lower = 600, method = "L-BFGS-B")
optim(600, my.fn, lower = 100, method = "L-BFGS-B")
optim(600, my.fn, method = "L-BFGS-B")
optim(1918, my.fn, method = "L-BFGS-B")
my.fn <- function(x){
y <- ((((5/(1.96+2.33))^2)-(800/(x-1)))/500)^(-1)+x+1
}
optim(1918, my.fn, method = "L-BFGS-B")
optim(1000, my.fn, method = "L-BFGS-B")
optim(1000, my.fn)
optimize(my.fn)
?optimize
optimize(my.fn,c(0,2000))
optimize(my.fn,c(0,1918))
optimize(my.fn,c(0,Inf))
optimize(my.fn,c(0,2000))
1000/(1.11^7)
1000/(1.09^6)
596.2673/481.6584-1
-7.194/1.1*0.5
10/1.0375
110/(1.0375^12)
110/(1.0375^2)
8-2-1.5*(5)
1.5*(5)
6-2-.5*(5)
3*6-2-8
.9*(2/100)^2+.1*(3/100)^2
sqrt(.9*(2/100)^2+.1*(3/100)^2)
sqrt(.9*(2/100)^2+.1*(3/100)^2)*100
(400*124.3+200*124.9+200*125.1)/800
-2+(98*16)/200
-0.02+(.98*16)/200
-0.02+(.98*16)/200*100
(-0.02+(.98*16)/200)*100
1.02/75
1.02/75 * 1000000
1000000/80*1.05
13125-13600
10/1.05
2/1.03
(10/1.05)/(2/1.03)
-(10/1.05)*100*(0.3/100)+(2/1.03)*5*100*(0.3/100)
(10/1.05)/(2/1.03)
-(10/1.05)*100*(0.3/100)+(2/1.03)*(10/1.05)/(2/1.03)*100*(0.3/100)
-(10/1.05)*100*(0.3/100)+(2/1.03)*(10/1.05)/(2/1.03)*100*(0.3/100)
-(10/1.05)*100*(0.3/100)+(2/1.03)*5*100*(0.3/100)
4*(1.046^5)/(1.05^4)
4*(1.049^5)/(1.05^4)
.3-.5-(4.18*.4-4.12*.1)
(4.18*.4-4.12*.1)
10*.04^2
sqrt(10*.04^2)
8/12.65
(4*1.2-2)/12.65
50*(150-0.5*50)-4000-0.25*50
50*(150-0.5*50)-4000-0.25*50^2
50*(150-0.5*50)-4000-0.25*(50^2)
50*(150-0.5*50)
100*(804-100)
1-0.2*(-0.5-0.2)+0.5*(-0.5*(-0.2)+0.5^2)
0.5*(-0.5*(-0.2)+0.5^2)
1-0.2*(-0.5-0.2)+0.5*(-0.5*(-0.2)+0.5^2+.5)
-0.5*2.45-0.55
(-0.5*a-0.55)/a
a = 1.84/0.75
(-0.5*a-0.55)/a
c <- (-0.5*b+0.5)/a
b <- (-0.5*a-0.55)/a
b
c <- (-0.5*b+0.5)/a
c
a
d <- -.5*c
d
-.5*d
a = 1.84/0.75
a
b <- (-0.5*a-0.55)
b
c <- (-0.5*b+0.5)
c
d <- -.5*c
d
-.5*d
e <- -.5*d
e
f <- -.5*e
f
b /a
c/a
d/a
e/a
f <- -.5*e
f/a
0.5+1.96*sqrt(2)
0.5-1.96*sqrt(2)
0.5-1.96*sqrt(2)
0.5+1.96*sqrt(2)
.25-1.96*sqrt(2.25)
.25+1.96*sqrt(2.25)
0.25*2.45+1+.2^2+.5^2
install.packages("tserise")
install.packages("tseries")
library(tseries)
garch(x = rnorm(100,0,1), c(0,1))
a <- garch(x = rnorm(100,0,1), c(0,1))
summary(a)
da <- rnorm(100,0,1)
a <- garch(x = da, c(0,1))
summary(a)
ts(da)
da <- ts(da)
plot.ts(da)
dynlm(da~1)
byd.mean <- dynlm(da~1)
EuStockMarkets
data(EuStockMarkets)
dax <- diff(log(EuStockMarkets))[,"DAX"]
dax
dax.garch <- garch(dax)  # Fit a GARCH(1,1) to DAX returns
summary(dax.garch)       # ARCH effects are filtered. However,
plot(dax.garch)
URL.base <- 'retrieve?multipleRateTypes=true&startdate=04022018&enddate='
URL.prefix <- 'https://websvcgatewayx2.frbny.org/mktrates_external_httponly/services/v1_0/mktRates/excel/'
URL.suffix <- '&rateType=R3'
URL.date <- Sys.Date()
URL.date <- format(URL.date, '%m%d%Y')
URL.content <- paste(URL.prefix, URL.base, URL.date, URL.suffix, sep = '')
# Download file
file.name <- "~/SOFR.xls"
if(!file.exists(file.name) || (format(file.info(file.name)$mtime, '%m%d%Y') != URL.date)){
download.file(url = URL.content, destfile = file.name, method = "curl")
}
df <- read_xls(path = "~/SOFR.xls", col_name = T, skip = 3)
df.nrow <- dim(df)[1]
df <- df[c(df.nrow-7:df.nrow),]
df.rate <- as.numeric(df[[3]])
df.vol <- as.numeric(gsub(",", "", df[[8]]))
df.nrow <- dim(df)[1]
library(tidyverse)
library(readx;)
library(readxl)
e
file.name <- "~/SOFR.xls"
if(!file.exists(file.name) || (format(file.info(file.name)$mtime, '%m%d%Y') != URL.date)){
download.file(url = URL.content, destfile = file.name, method = "curl")
}
df <- read_xls(path = "~/SOFR.xls", col_name = T, skip = 3)
df.nrow <- dim(df)[1]
df <- df[c(df.nrow-7:df.nrow),]
df.rate <- as.numeric(df[[3]])
df.vol <- as.numeric(gsub(",", "", df[[8]]))
df.nrow <- dim(df)[1]
df
df.rate
data(df.rate)
diff(log(df.rate))
dax <- diff(log(df.rate))
dax.garch <- garch(dax)  # Fit a GARCH(1,1) to DAX returns
summary(dax.garch)       # ARCH effects are filtered. However,
plot(dax.garch)
scale_color_manual?
}
?scale_color_manual
shiny::runApp('D:/Repository/R-Studio/SOFR')
runApp('D:/Repository/R-Studio/SOFR')
